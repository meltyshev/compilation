{"version":3,"sources":["App.module.css","with-auth.jsx","App.jsx","use-field.js","index.js"],"names":["module","exports","WrappedComponent","isPlusogram","word1","word2","length","word1Sorted","split","sort","join","word2Sorted","hasDifference","i","charAt","isLogogrif","isLogogrif2","totalDifferences","isBrukva","withAuth","useState","dictionary","setDictionary","initialValue","value","setValue","useCallback","nextValue","target","useField","word","handleWordChange","useDebounce","wordDebounced","useEffect","a","async","sanstv","sociation","Loader","active","wordClean","trim","toLowerCase","replace","anagrams","reduce","result","isAnagram","getAnagrams","plusograms","getPlusograms","metagrams","isMetagram","getMetagrams","logogrifs","getLogogrifs","logogrifs2","getLogogrifs2","brukvas","getBrukvas","Container","Grid","padded","Row","Column","Form","Input","fluid","placeholder","size","onChange","Divider","horizontal","Header","as","className","styles","title","words","map","anagram","Label","key","classNames","odd","plusogram","metagram","logogrif","logogrif2","brukva","useMemo","window","location","hostname","URLSearchParams","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2fa2597.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"odd\":\"App_odd__2GTiD\"};","import React, { useMemo } from 'react';\n\nconst HOSTNAME = 'meltyshev.github.io';\nconst TOKEN = 'vhLV5t';\n\nexport default WrappedComponent => {\n  const Auth = () => {\n    const isAuthenticated = useMemo(() => {\n      if (process.env.NODE_ENV === 'development') {\n        return true;\n      }\n\n      return window.location.hostname === HOSTNAME\n        && new URLSearchParams(window.location.search).get('token') === TOKEN;\n    }, []);\n\n    if (!isAuthenticated) {\n      return 'Unauthorized';\n    }\n\n    return <WrappedComponent />;\n  };\n\n  return Auth;\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Container, Divider, Form, Grid, Header, Input, Label, Loader,\n} from 'semantic-ui-react';\n\nimport withAuth from './with-auth';\nimport useField from './use-field';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst isAnagram = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  return word1Sorted === word2Sorted;\n}\n\nconst isPlusogram = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  const word1Sorted = word1.split('').sort().join('');\n  const word2Sorted = word2.split('').sort().join('');\n\n  let hasDifference = false;\n  for (let i = 0; i < word2Sorted.length; i++) {\n    if (word1Sorted.charAt(i - +hasDifference) !== word2Sorted.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isMetagram = (word1, word2) => {\n  if (word1.length !== word2.length) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word1.length; i++) {\n    if (word1.charAt(i) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isLogogrif = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let hasDifference = false;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +hasDifference) !== word2.charAt(i)) {\n      if (hasDifference) {\n        return false;\n      }\n\n      hasDifference = true;\n    }\n  }\n\n  return hasDifference;\n}\n\nconst isLogogrif2 = (word1, word2) => {\n  if (word2.length - word1.length !== 2) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - totalDifferences) !== word2.charAt(i)) {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n}\n\nconst isBrukva = (word1, word2) => {\n  if (word2.length - word1.length !== 1) {\n    return false;\n  }\n\n  let totalDifferences = 0;\n  for (let i = 0; i < word2.length; i++) {\n    if (word1.charAt(i - +!!totalDifferences) === word2.charAt(i)) {\n      if (totalDifferences === 1) {\n        return false;\n      }\n    } else {\n      if (totalDifferences === 2) {\n        return false;\n      }\n\n      totalDifferences++;\n    }\n  }\n\n  return totalDifferences === 2;\n}\n\nconst getAnagrams = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (word1 === word2) {\n      return result;\n    }\n\n    if (isAnagram(word1, word2)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst getPlusograms = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (isPlusogram(word1, word2)) {\n      return [...result, word2];\n    }\n\n    if (isPlusogram(word2, word1)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst getMetagrams = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (isMetagram(word1, word2)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst getLogogrifs = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (isLogogrif(word1, word2)) {\n      return [...result, word2];\n    }\n\n    if (isLogogrif(word2, word1)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst getLogogrifs2 = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (isLogogrif2(word1, word2)) {\n      return [...result, word2];\n    }\n\n    if (isLogogrif2(word2, word1)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst getBrukvas = (word1, dictionary) => {\n  if (word1.length === 0) {\n    return [];\n  }\n\n  return dictionary.reduce((result, word2) => {\n    if (isBrukva(word1, word2)) {\n      return [...result, word2];\n    }\n\n    if (isBrukva(word2, word1)) {\n      return [...result, word2];\n    }\n\n    return result;\n  }, []);\n}\n\nconst App = () => {\n  const [dictionary, setDictionary] = useState(null);\n  const [word, handleWordChange] = useField('');\n  const [wordDebounced] = useDebounce(word, 500);\n\n  useEffect(() => {\n    (async () => {\n      const { sanstv, sociation } = await import('./dictionary.json');\n\n      setDictionary({\n        sanstv,\n        sociation,\n      });\n    })();\n  }, []);\n\n  if (!dictionary) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  const wordClean = wordDebounced.trim().toLowerCase().replace('ё', 'е');\n\n  const anagrams = getAnagrams(wordClean, dictionary.sociation);\n  const plusograms = getPlusograms(wordClean, dictionary.sociation);\n  const metagrams = getMetagrams(wordClean, dictionary.sociation);\n  const logogrifs = getLogogrifs(wordClean, dictionary.sociation);\n  const logogrifs2 = getLogogrifs2(wordClean, dictionary.sociation);\n  const brukvas = getBrukvas(wordClean, dictionary.sociation);\n\n  return (\n    <Container>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column>\n            <Form>\n              <Input\n                fluid\n                value={word}\n                placeholder=\"Слово\"\n                size=\"big\"\n                onChange={handleWordChange}\n              />\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n        {anagrams.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Анаграммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {anagrams.map((anagram, i) => (\n                  <Label\n                    horizontal\n                    key={anagram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {anagram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {plusograms.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Плюсограммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {plusograms.map((plusogram, i) => (\n                  <Label\n                    horizontal\n                    key={plusogram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {plusogram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {metagrams.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Метаграммы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {metagrams.map((metagram, i) => (\n                  <Label\n                    horizontal\n                    key={metagram}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {metagram}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {logogrifs.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Логогрифы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {logogrifs.map((logogrif, i) => (\n                  <Label\n                    horizontal\n                    key={logogrif}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {logogrif}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {logogrifs2.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Логогрифы +2</Header>\n              </Divider>\n              <div className={styles.words}>\n                {logogrifs2.map((logogrif2, i) => (\n                  <Label\n                    horizontal\n                    key={logogrif2}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {logogrif2}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n        {brukvas.length > 0 && (\n          <Grid.Row>\n            <Grid.Column>\n              <Divider horizontal>\n                <Header as=\"h4\" className={styles.title}>Брюквы</Header>\n              </Divider>\n              <div className={styles.words}>\n                {brukvas.map((brukva, i) => (\n                  <Label\n                    horizontal\n                    key={brukva}\n                    className={classNames(styles.word, i % 2 && styles.odd)}\n                  >\n                    {brukva}\n                  </Label>\n                ))}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default withAuth(App);\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}